openapi: 3.0.3
info:
  title: Order API
  version: 1.0.0
  description: API for managing orders in the eCommerce system

servers:
  - url: http://localhost:8080/api/v1
    description: Local server

paths:
  /orders:
    get:
      summary: Retrieve all orders
      operationId: getAllOrders
      tags:
        - Orders
      responses:
        '200':
          description: Successfully retrieved a list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponseDto'

  /orders/{id}:
    get:
      summary: Retrieve an order by ID
      operationId: getOrderById
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the order to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    OrderEntryDto:
      type: object
      required:
        - product
        - count
      properties:
        product:
          type: string
          example: iPhone 15
          description: Name of the product
        count:
          type: integer
          minimum: 1
          example: 2
          description: Quantity of the product ordered

    OrderRequestDto:
      type: object
      required:
        - orderEntries
        - totalPrice
      properties:
        orderEntries:
          type: array
          description: List of order items
          items:
            $ref: '#/components/schemas/OrderEntryDto'
        totalPrice:
          type: number
          format: double
          minimum: 0
          example: 1999.99
          description: Total price of the order
        customerId:
          type: integer
          format: int64
          example: 123
          description: ID of the customer placing the order

    OrderResponseDto:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
          description: Unique identifier for the order
        customer:
          $ref: '#/components/schemas/CustomerResponseDto'
        orderItems:
          type: array
          description: List of items in the order
          items:
            $ref: '#/components/schemas/OrderEntryDto'
        totalPrice:
          type: number
          format: double
          example: 1999.99
          description: Total price of the order
        orderStatus:
          type: string
          example: "PENDING"
          enum: [PENDING, PROCESSING, SHIPPED, DELIVERED, CANCELLED]
          description: Current status of the order

    CustomerResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
          description: Unique identifier for the customer
        name:
          type: string
          example: John Doe
          description: Name of the customer
        phoneNumber:
          type: string
          example: +1234567890
          description: Phone number of the customer
        email:
          type: string
          format: email
          example: john.doe@example.com
          description: Email address of the customer
        address:
          type: string
          example: 123 Main St, Springfield
          description: Address of the customer

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: 2024-06-11T15:20:00Z
          description: Time of the error occurrence
        status:
          type: integer
          example: 404
          description: HTTP status code
        error:
          type: string
          example: Not Found
          description: Error type
        message:
          type: string
          example: Order with ID 550e8400-e29b-41d4-a716-446655440000 Not found
          description: Detailed error message
        path:
          type: string
          example: /api/v1/orders/550e8400-e29b-41d4-a716-446655440000
          description: API path where the error occurred
