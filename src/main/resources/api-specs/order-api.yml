openapi: 3.0.0
info:
  title: Order API
  description: API for managing orders in an e-commerce application
  version: 1.0.0
paths:
  /api/v1/orders:
    post:
      summary: Create a new order
      description: Add a new order to the system.
      operationId: addOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestDto'
      responses:
        '200':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '400':
          description: Invalid order data
    get:
      summary: Get all orders
      description: Retrieve a list of all orders.
      operationId: getAllOrders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponseDto'

  /api/v1/orders/{orderId}:
    get:
      summary: Get an order by its ID
      description: Retrieve an order's details by its unique identifier.
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: The unique identifier of the order
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '404':
          description: Order not found
    delete:
      summary: Delete an order
      description: Remove an order from the system by its ID.
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: The unique identifier of the order to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Order deleted
        '404':
          description: Order not found

components:
  schemas:
    OrderRequestDto:
      type: object
      properties:
        customerId:
          type: string
          format: uuid
          description: The unique identifier of the customer placing the order
        totalAmount:
          type: number
          format: float
          description: The total amount for the order
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderEntryRequestDto'
    OrderEntryRequestDto:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          description: The unique identifier of the product
        quantity:
          type: integer
          description: The quantity of the product in the order
        price:
          type: number
          format: float
          description: The price of the product
    OrderResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the order
        customerId:
          type: string
          format: uuid
          description: The unique identifier of the customer placing the order
        totalAmount:
          type: number
          format: float
          description: The total amount for the order
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderEntryResponseDto'
    OrderEntryResponseDto:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          description: The unique identifier of the product
        quantity:
          type: integer
          description: The quantity of the product in the order
        price:
          type: number
          format: float
          description: The price of the product
        total:
          type: number
          format: float
          description: The total price for the order entry (quantity * price)
