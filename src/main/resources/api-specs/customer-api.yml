openapi: 3.0.0
info:
  title: Customer API
  description: API for managing customers in an e-commerce application
  version: 1.0.0
paths:
  /api/v1/customers/{customerId}:
    get:
      summary: Get a customer by their ID
      description: Retrieve a customer's details by their unique identifier.
      operationId: getCustomerById
      parameters:
        - name: customerId
          in: path
          description: The unique identifier of the customer
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
        '404':
          description: Customer not found
    delete:
      summary: Delete a customer
      description: Remove a customer from the system by their ID.
      operationId: deleteCustomer
      parameters:
        - name: customerId
          in: path
          description: The unique identifier of the customer to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Customer deleted
        '404':
          description: Customer not found
    put:
      summary: Update an existing customer
      description: Update the details of a customer by their ID.
      operationId: updateCustomer
      parameters:
        - name: customerId
          in: path
          description: The unique identifier of the customer to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequestDto'
      responses:
        '200':
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
        '400':
          description: Invalid customer data
        '404':
          description: Customer not found
  /api/v1/customers:
    get:
      summary: Get all customers
      description: Retrieve a list of all customers.
      operationId: getAllCustomer
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponseDto'
    post:
      summary: Add a new customer
      description: Create a new customer in the system.
      operationId: addCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequestDto'
      responses:
        '200':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
        '400':
          description: Invalid customer data

components:
  schemas:
    CustomerRequestDto:
      type: object
      properties:
        firstName:
          type: string
          description: The first name of the customer
        lastName:
          type: string
          description: The last name of the customer
        email:
          type: string
          description: The email of the customer
        phone:
          type: string
          description: The phone number of the customer
    CustomerResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the customer
        firstName:
          type: string
          description: The first name of the customer
        lastName:
          type: string
          description: The last name of the customer
        email:
          type: string
          description: The email of the customer
        phone:
          type: string
          description: The phone number of the customer
