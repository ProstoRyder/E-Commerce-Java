openapi: 3.0.0
info:
  title: Product API
  description: API for managing products in an e-commerce application
  version: 1.0.0
paths:
  /api/v1/products:
    get:
      summary: Get all products
      description: Retrieve a list of all products.
      operationId: getAllProducts
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponseDto'
    post:
      summary: Add a new product
      description: Create a new product in the system.
      operationId: addProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequestDto'
      responses:
        '200':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
        '400':
          description: Invalid product data

  /api/v1/products/{productId}:
    get:
      summary: Get a product by its ID
      description: Retrieve a product's details by its unique identifier.
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: The unique identifier of the product
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
        '404':
          description: Product not found
    delete:
      summary: Delete a product
      description: Remove a product from the system by its ID.
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: The unique identifier of the product to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Product deleted
        '404':
          description: Product not found
    put:
      summary: Update an existing product
      description: Update the details of a product by its ID.
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          description: The unique identifier of the product to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequestDto'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
        '400':
          description: Invalid product data
        '404':
          description: Product not found

  /api/v1/products/by-category/{categoryId}:
    get:
      summary: Get products by category ID
      description: Retrieve a list of products belonging to a specific category.
      operationId: findAllByCategoryId
      parameters:
        - name: categoryId
          in: path
          description: The unique identifier of the category
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A list of products in the specified category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDetailsProjection'
        '404':
          description: Category not found

components:
  schemas:
    ProductRequestDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the product
        description:
          type: string
          description: The description of the product
        price:
          type: number
          format: float
          description: The price of the product
        categoryId:
          type: string
          format: uuid
          description: The unique identifier of the category the product belongs to
    ProductResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the product
        name:
          type: string
          description: The name of the product
        description:
          type: string
          description: The description of the product
        price:
          type: number
          format: float
          description: The price of the product
        categoryId:
          type: string
          format: uuid
          description: The unique identifier of the category the product belongs to
    ProductDetailsProjection:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the product
        name:
          type: string
          description: The name of the product
        price:
          type: number
          format: float
          description: The price of the product
        categoryName:
          type: string
          description: The name of the category the product belongs to
